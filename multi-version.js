#!/usr/bin/env node

const _ = require('lodash');
const fs = require('fs-extra');
const semver = require('semver');
const downloadPackage = require('download-npm-package');
const cedarPackages = require(`${__dirname}/cedar-packages.json`);

const packageDirectory = `${__dirname}/cedar-packages`;

function main() {
  //clean the directory
  fs.removeSync('${packageDirectory}');

  // go through each package
  for (let p in cedarPackages) {
    console.log(`Getting ${p}...`);
    let versions = cedarPackages[p];
    downloadPackages(p, versions);
    createJsIndex(p, versions);
    createScssIndex(p, versions);
  }

  console.log('Done');
}

/**
 * 
 * @param {String} packageName -- full name of the package to get (i.e. @rei/cdr-button)
 * @param {Array} versions -- array of versions to download (i.e. [0.1.0, 1.0.0])
 * 
 * Uses download-npm-packages to download the given package at the given versions and cleans up the
 * directory structure
 */
function downloadPackages(packageName, versions) {
  versions.forEach((version) => {
    // path/to/cedar-packages/<package without @rei/>/<version>
    const versionDir = `${packageDirectory}/${packageName.split('/')[1]}/${version}/`;
    downloadPackage({
      arg: `${packageName}@${version}`,
      dir: versionDir,
    }).then(() => {
      // installed packages have a lot of files we don't care about, just move files from the dist folder
      fs.moveSync(`${versionDir}/${packageName}/dist`, versionDir);
      fs.removeSync(`${versionDir}/@rei/`);
    });
  });
}

/**
 * 
 * @param {String} packageName -- full name of the package to get (i.e. @rei/cdr-button)
 * @param {Array} versions -- array of versions to download (i.e. [0.1.0, 1.0.0])
 * 
 * Create an index file to easily import components from
 */
function createJsIndex(name, versions) {
  let contents = '//File generated by /multi-version.js \r\n\r\n';
  let components = [];
  // cdr-button -> CdrButton
  const compName = _.upperFirst(_.camelCase(name.split('/')[1]));

  versions.forEach((v) => {
    //imports
    //CdrButton0.1.0 -> CdrButton010
    const compNameVersion = `${compName}${v.replace(/\./gi, '').replace(/\-/gi, '')}`;
    contents += `import { ${compName} as ${compNameVersion} } from '${packageDirectory}/${name.split('/')[1]}/${v}/${name.split('/')[1]}.js';\r\n`;
    components.push(compNameVersion);
  });

  //exports
  contents += `
export default {
  ${components.join(',\r\n  ')}
}`;

  //output
  fs.outputFileSync(`${packageDirectory}/${name.split('/')[1]}/index.js`, contents);
}

/**
 * 
 * @param {String} packageName -- full name of the package to get (i.e. @rei/cdr-button)
 * @param {Array} versions -- array of versions to download (i.e. [0.1.0, 1.0.0])
 * 
 * Create and index file for easily importing css files
 */
function createScssIndex(name, versions) {
  let contents = '//File generated by /multi-version.js \r\n\r\n';

  versions.forEach((v) => {
    //imports
    contents += `@import '${packageDirectory}/${name.split('/')[1]}/${v}/${name.split('/')[1]}.css';\r\n`;
  });

  //output
  fs.outputFileSync(`${packageDirectory}/${name.split('/')[1]}/index.scss`, contents);
}

main();
