#!/usr/bin/env node

const _ = require('lodash');
const fs = require('fs-extra');
const semver = require('semver');
const downloadPackage = require('download-npm-package');
const cedarPackages = require('./cedar-packages.json');

function main() {
  //clean the directory
  fs.removeSync('./cedar-packages');

  for (let p in cedarPackages) {
    let versions = cedarPackages[p];
    downloadPackages(p, versions);
    createJsIndex(p, versions);
    createScssIndex(p, versions);
  }
}

function isNotPre(version) {
  const diff = semver.diff('0.0.0', version);
  const diffType = ['premajor', 'preminor', 'prepatch', 'prerelease'].indexOf(diff) >= 0 ? true : false;
  return !diffType;
}

function downloadPackages(packageName, versions) {
  versions.forEach((version) => {
    const directory = `./cedar-packages/${packageName.split('/')[1]}/${version}/`;
    downloadPackage({
      arg: `${packageName}@${version}`,
      dir: directory,
    }).then(() => {
      fs.moveSync(`${directory}/${packageName}/dist`, directory);
      fs.removeSync(`${directory}/@rei/`);
    });
  });
}

function createJsIndex(name, versions) {
  let contents = '//File generated by /multi-version.js \r\n\r\n';
  let components = [];
  const compName = _.upperFirst(_.camelCase(name.split('/')[1]));

  versions.forEach((v) => {
    //imports
    const compNameVersion = `${compName}${v.replace(/\./gi, '')}`;
    contents += `import {${compName} as ${compNameVersion}} from './${v}/${name.split('/')[1]}.js';\r\n`;
    components.push(compNameVersion);
  });

  //exports
  contents += `
export default {
  ${components.join(',\r\n  ')}
}`;

  //output
  fs.outputFileSync(`./cedar-packages/${name.split('/')[1]}/index.js`, contents);
}

function createScssIndex(name, versions) {
  let contents = '//File generated by /multi-version.js \r\n\r\n';

  versions.forEach((v) => {
    //imports
    contents += `@import '${__dirname}/cedar-packages/${name.split('/')[1]}/${v}/${name.split('/')[1]}.css';\r\n`;
  });

  //output
  fs.outputFileSync(`./cedar-packages/${name.split('/')[1]}/index.scss`, contents);
}

main();
